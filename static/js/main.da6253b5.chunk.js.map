{"version":3,"sources":["Components/TopicList.js","Components/AsideBlock.js","Components/MainBlock.js","Components/LearnPage.js","api/api.js","App.js","index.js"],"names":["TopicList","course","changeCurrentCourse","useState","visibleList","handlVisibleList","className","onClick","src","alt","map","item","key","title","to","AsideBlock","React","memo","arr","search","currentCourse","type","placeholder","value","onChange","event","target","trimLeft","filter","toLowerCase","includes","MainBlock","path","exact","render","index","text","LearnPage","App","ReactDOM","document","getElementById"],"mappings":"kTAiCeA,G,MA7BG,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,oBAA0B,EACXC,oBAAS,GADE,mBAC7CC,EAD6C,KAChCC,EADgC,KAEpD,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,oBAAoBC,QAAS,WAC1CF,GAAkBD,GAClBF,EAAoB,MAEpB,wBAAII,UAAU,oBAAd,sCACA,yBACEE,IAAI,mBACJC,IAAI,QACJH,UAAWF,EAAc,mBAAqB,gDAEjDA,GACC,wBAAIE,UAAU,mBACXL,EAAOS,KAAI,SAAAC,GAAI,OACd,wBAAIL,UAAU,kBAAkBM,IAAKD,EAAKE,OACxC,kBAAC,IAAD,CAASC,GAAI,IAAMH,EAAKE,OACrBF,EAAKE,eCKPE,EAzBIC,IAAMC,MAAK,YAAiB,IAGxBC,EAAKC,EAHKlB,EAAa,EAAbA,OAAa,EACCE,mBAAS,IADV,mBACrCiB,EADqC,KACtBlB,EADsB,KAO5C,OACE,2BAAOI,UAAU,SACf,wBAAIA,UAAU,gBAAd,gDACA,yBAAKA,UAAU,UACb,2BACEA,UAAU,gBACVe,KAAK,OACLC,YAAY,gBACZC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAWvB,EAAoBuB,EAAMC,OAAOH,MAAMI,eAE9D,yBAAKnB,IAAI,oBAAoBF,UAAU,eAAeG,IAAI,YAE5D,kBAAC,EAAD,CAAWR,QAjBMiB,EAiBcjB,EAjBTkB,EAiBiBC,EAhBzCF,EAAIU,QAAO,SAAAjB,GAAI,OAAIA,EAAKE,MAAMgB,cAAcC,SAASX,EAAOU,mBAgBH3B,oBAAqBA,QCCnE6B,G,MApBG,SAAC,GAAgB,IAAd9B,EAAa,EAAbA,OAEnB,OACE,0BAAMK,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0B,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAC5B,wBAAI5B,UAAU,eAAd,oBAEDL,EAAOS,KAAI,SAACC,EAAMwB,GAAP,OACV,kBAAC,IAAD,CAAOH,KAAM,IAAMrB,EAAKE,MAAOD,IAAKuB,EAAOD,OAAQ,kBACjD,oCACE,wBAAI5B,UAAU,eAAeK,EAAKE,OAClC,uBAAGP,UAAU,cAAcK,EAAKyB,iBCD/BC,G,MAVG,SAAC,GAAgB,IAAdpC,EAAa,EAAbA,OAEnB,OACE,yBAAKK,UAAU,aACb,kBAAC,EAAD,CAAYL,OAAQA,IACpB,kBAAC,EAAD,CAAWA,OAAQA,OCVZA,EAAS,CACpB,CAACY,MAAO,QAASuB,KAAM,kVACvB,CAACvB,MAAO,WAAYuB,KAAM,0PAC1B,CAACvB,MAAO,aAAcuB,KAAM,qNAC5B,CAACvB,MAAO,WAAYuB,KAAM,sIAC1B,CAACvB,MAAO,aAAcuB,KAAM,4CAC5B,CAACvB,MAAO,aAAcuB,KAAM,yOCWfE,MAZf,WAEE,OACE,kBAAC,IAAD,CACEN,KAAK,IACLE,OAAU,kBACR,kBAAC,EAAD,CAAWjC,OAAQA,QCL3BsC,IAASL,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.da6253b5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/topicList.css';\r\n\r\nconst TopicList = ({course, changeCurrentCourse }) => {\r\n  const [visibleList, handlVisibleList ] = useState(true)\r\n  return (\r\n    <div className=\"topicList\">\r\n      <div className=\"topicList__header\" onClick={()=> {\r\n        handlVisibleList(!visibleList)\r\n        changeCurrentCourse('')\r\n      }}>\r\n        <h3 className=\"topicList__title\">Semantic Web Page Layout with HTML</h3>\r\n        <img\r\n          src='./icon/arrow.svg'\r\n          alt=\"arrow\"\r\n          className={visibleList ? \"topicList__arrow\" : \"topicList__arrow topicList__arrow-rotate\"}/>\r\n      </div>\r\n      {visibleList ? (\r\n        <ul className=\"topicList__list\">\r\n          {course.map(item => (\r\n            <li className=\"topicList__item\" key={item.title}>\r\n              <NavLink to={'/' + item.title}>\r\n                {item.title}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      ) : false}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopicList","import React, { useState } from 'react';\r\nimport TopicList from './TopicList';\r\n\r\nconst AsideBlock = React.memo(({ course }) => {\r\n  const [currentCourse, changeCurrentCourse] = useState('')\r\n\r\n  const searchTopic = (arr, search) => (\r\n    arr.filter(item => item.title.toLowerCase().includes(search.toLowerCase()))\r\n  )\r\n\r\n  return (\r\n    <aside className=\"aside\">\r\n      <h2 className=\"aside__title\">Learn HTML, CSS, and JavaScript from Scratch</h2>\r\n      <div className=\"search\">\r\n        <input\r\n          className=\"search__input\"\r\n          type=\"text\"\r\n          placeholder=\"Search Course\"\r\n          value={currentCourse}\r\n          onChange={(event) => changeCurrentCourse(event.target.value.trimLeft())}\r\n        />\r\n        <img src=\"./icon/search.svg\" className=\"search__icon\" alt=\"search\"/>\r\n      </div>\r\n      <TopicList course={searchTopic(course, currentCourse)} changeCurrentCourse={changeCurrentCourse} />\r\n    </aside>\r\n  )\r\n})\r\n\r\nexport default AsideBlock","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport '../styles/mainBlock.css';\r\n\r\nconst MainBlock = ({ course }) => {\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <Switch>\r\n        <Route path=\"/\" exact render={()=>(\r\n          <h2 className=\"main__title\">HTML Tutorial</h2>\r\n        )}/>\r\n        {course.map((item, index) => (\r\n          <Route path={'/' + item.title} key={index} render={()=> (\r\n            <>\r\n              <h2 className=\"main__title\">{item.title}</h2>\r\n              <p className=\"main__text\">{item.text}</p>\r\n            </>\r\n          )}/>\r\n        ))}\r\n      </Switch>\r\n    </main>\r\n  )\r\n}\r\nexport default MainBlock","import React from 'react';\r\nimport AsideBlock from './AsideBlock';\r\nimport MainBlock from './MainBlock';\r\nimport '../styles/aside.css';\r\n\r\nconst LearnPage = ({ course }) => {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <AsideBlock course={course}/>\r\n      <MainBlock course={course}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LearnPage","export const course = [\r\n  {title: 'Basic', text: \"Dont worry if these examples use tags you have not learned.You will learn about them in the next chapters.HTML Documents All HTML documents must start with a document type declaration: <!DOCTYPE html>.The HTML document itself begins with <html> and ends with </html>.The visible part of the HTML document is between <body> and </body>\"},\r\n  {title: 'Elements', text: \"HTML Elements An HTML element usually consists of a start tag and an end tag, with the content inserted in between: <tagname>Content goes here...</tagname>The HTML element is everything from the start tag to the end tag:<p>My first paragraph.</p>\"},\r\n  {title: 'Attributes', text: \"All HTML elements can have attributes Attributes provide additional information about an element Attributes are always specified in the start tag Attributes usually come in name/value pairs like: name='value' \"},\r\n  {title: 'Headings', text: \"Headings are defined with the <h1> to <h6> tags.<h1> defines the most important heading. <h6> defines the least important heading.\"},\r\n  {title: 'Paragraphs', text: \"The HTML <p> element defines a paragraph\"},\r\n  {title: 'Formatting', text: \"In the previous chapter, you learned about the HTML style attribute.HTML also defines special elements for defining text with a special meaning.HTML uses elements like <b> and <i> for formatting output, like bold or italic text.\"},\r\n]","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport LearnPage from './Components/LearnPage';\nimport { course } from './api/api';\n\nfunction App() {\n\n  return (\n    <Route\n      path=\"/\"\n      render = {() => (\n        <LearnPage course={course}/>\n      )}\n    />\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}